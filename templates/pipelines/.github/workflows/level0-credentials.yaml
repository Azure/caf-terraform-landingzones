#
# Copyright (c) Microsoft Corporation
# Licensed under the MIT License.
#

name: level0-credentials

on:
  schedule:
    # 18:00 UTC / 02:00 SGT every days
    - cron: '00 18 * * *'
  pull_request:
    branches-ignore:
      - bootstrap
      - end2end
    paths:
      - 'platform/configuration/level0/credentials/**'

permissions:
  id-token: write
  contents: read

concurrency: 
  group: level0-credentials

env:
  LZ_REPO: '{{resources.terraform_code_repository}}'
  LZ_BRANCH: '{{resources.caf_landingzone_branch}}'
  CAF_ENVIRONMENT: {{resources.caf_environment}}

jobs:
  environment:
    name: Setup dynamic environment variables
    runs-on: [self-hosted, platform]
    outputs:
{% raw %}
      terraform_code_repository: ${{ steps.set_env.outputs.terraform_code_repository }}
      terraform_code_ref: ${{ steps.set_env.outputs.terraform_code_ref }}
      environment: ${{ steps.set_env.outputs.environment }}
{% endraw %}
    steps:
      - name: Set environment variables for reusable workflows
        id: set_env
        run: |
          echo "::set-output name=terraform_code_repository::$LZ_REPO"
          echo "::set-output name=terraform_code_ref::$LZ_BRANCH"
          echo "::set-output name=environment::$CAF_ENVIRONMENT"


  
  credentials:
    uses: ./.github/workflows/rover.yaml
    needs: [environment]
    secrets:
{% raw %}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_LAUNCHPAD_SUBSCRIPTION_ID: ${{ secrets.AZURE_MANAGEMENT_SUBSCRIPTION_ID }}
      AZURE_TARGET_SUBSCRIPTION_ID: ${{ secrets.AZURE_MANAGEMENT_SUBSCRIPTION_ID }}
    with:
      terraform_code_ref: ${{ needs.environment.outputs.terraform_code_ref }}
      terraform_code_repository: ${{ needs.environment.outputs.terraform_code_repository }}
      environment: ${{ needs.environment.outputs.environment }}
      caf_identity_aad_key: cred_identity
      landingzone_code_path: ./landingzones/caf_solution
      landingzone_configuration_path: ./platform/configuration/level0/credentials
      plan_path: ${GITHUB_WORKSPACE}/launchpad_credentials.tfstate.tfplan
      tfstate: launchpad_credentials.tfstate
      level: level0
      terraform_action: apply
{% endraw %}