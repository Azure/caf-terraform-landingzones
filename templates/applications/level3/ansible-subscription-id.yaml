- name: "Load variable for subscriptions"
  include_vars:
    name: subscriptions
    dir: "{{config_folder}}"
    depth: 1
    ignore_unknown_extensions: true
    files_matching: "subscriptions.asvm.yaml|subscription.asvm.yaml"

- name: "Content of subscriptions"
  debug:
    msg: "{{subscriptions}}"

- name: "[{{ level }}-{{ subscription_key }}] Get tfstate details"
  register: subscription_tfstate_storage_account_name
  shell: |
    az storage account list \
      --subscription {{ config.caf_terraform.launchpad.subscription_id }} \
      --query "[?tags.caf_tfstate=='{{ config.tfstates['asvm'][subscription_key].level }}' && tags.caf_environment=='{{ config.caf_terraform.launchpad.caf_environment }}'].{name:name}[0]" -o json | jq -r .name

- debug:
    msg: "{{ subscription_tfstate_storage_account_name.stdout }}"

- name: "[{{ level }}-{{ subscription_key }}] Download tfstate details"
  register: subscription_tfstate_exists
  ignore_errors: true
  shell: |
    az storage blob download \
      --name "{{ config.tfstates['asvm'][subscription_key].subscriptions.tfstate }}" \
      --account-name "{{ subscription_tfstate_storage_account_name.stdout }}" \
      --container-name "{{ config.tfstates['asvm'][subscription_key].workspace }}" \
      --auth-mode "login" \
      --file "{{ job_cache_base_path }}/{{ config.tfstates['asvm'][subscription_key].subscriptions.tfstate }}"

- debug:
    msg: "{{ subscription_tfstate_exists }}"
  when: subscriptions.subscriptions[subscription_key] is defined

- name: "[{{ level }}-{{ subscription_key }}] Get landingzones_subscriptions details"
  shell: "cat {{ job_cache_base_path }}/{{ config.tfstates['asvm'][subscription_key].subscriptions.tfstate }}"
  register: platform_subscriptions
  when:
    - subscriptions.subscriptions[subscription_key] is defined
    - subscription_tfstate_exists.rc == 0

- name: "[{{ level }}-{{ subscription_key }}] Get subscriptions data"
  when:
    - subscriptions.subscriptions[subscription_key] is defined
    - subscription_tfstate_exists.rc == 0
  set_fact:
    asvm_subscriptions_details: "{{ platform_subscriptions.stdout | from_json | json_query(path) }}"
  vars:
    path: 'outputs.objects.value."{{ config.tfstates["asvm"][subscription_key].subscriptions.lz_key_name }}".subscriptions'

- name: "[{{ level }}-{{ subscription_key }}] cleanup"
  when:
    - subscriptions.subscriptions[subscription_key] is defined
    - subscription_tfstate_exists.rc == 0
  file:
    path: "{{ job_cache_base_path }}/{{ config.tfstates['asvm'][subscription_key].subscriptions.tfstate }}"
    state: absent

- debug:
    msg: "Platform subscriptions - {{ asvm_subscriptions_details }}"
  when:
    - subscriptions.subscriptions[subscription_key] is defined
    - subscription_tfstate_exists.rc == 0
