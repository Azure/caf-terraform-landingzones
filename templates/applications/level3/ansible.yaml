- name: set asvm context
  set_fact:
    asvm_folder: "{{ asvm_long_folder if 'path' not in asvm_long_folder else asvm_long_folder.path | regex_search('[^\/]+(?=\/$|$)') }}"

- name: "[{{ level }}-{{ asvm_folder }}] Set cache folder"
  set_fact:
    # job_cache_base_path: "/home/vscode/.terraform.cache"
    subscription_key: "{{ asvm_folder }}"

- name: "Load variable for deployments"
  include_vars:
    name: deployments
    dir: "{{config_folder}}"
    depth: 1
    ignore_unknown_extensions: true
    files_matching: "deployments.asvm.yaml|deployments.yaml"

- debug:
    msg: "{{deployments}}"

### Generate remote state storage containers

- name: "[{{ level }} {{ subscription_key }}] - remote state container"
  include_tasks: "{{ level }}/storage_containers/ansible.yaml"
  when:
    - deployments.deployments[subscription_key].storage_containers is defined

#### Get subscription_id

- name: "[{{ level }} {{ subscription_key }}] - subscription"
  include_tasks: "{{ level }}/ansible-subscription-id.yaml"
  when:
    - config.tfstates['asvm'][subscription_key].subscriptions is defined
    - config.tfstates['asvm'][subscription_key].subscriptions.subscription_id is not defined

### Subscription

- name: "Load variable for subscriptions"
  include_vars:
    name: resources
    dir: "{{config_folder}}"
    depth: 1
    ignore_unknown_extensions: true
    files_matching: "subscriptions.asvm.yaml|subscription.asvm.yaml|tfstates.asvm.yaml"

- name: "[{{ level }} {{ subscription_key }}] - subscription"
  include_tasks: "{{ level }}/ansible-subscription.yaml"
  when:
    - resources.subscriptions[subscription_key] is defined
    - config.tfstates['asvm'][subscription_key].subscriptions.subscription_id is not defined


#### Privileged resources to deploy in the landingzone

- name: "[{{ level }} {{ subscription_key }}] - resources"
  include_tasks: "{{ level }}/resources/ansible.yaml"
  when:
    - config.tfstates['asvm'][subscription_key].resources is defined
