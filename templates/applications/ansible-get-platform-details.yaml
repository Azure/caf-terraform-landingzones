# Get Platform subscriptions

- name: "Get platform subscriptions tfstate details"
  register: subscription_tfstate_file_name
  shell: |
    az storage account list \
      --subscription {{ config.caf_terraform.launchpad.subscription_id }} \
      --query "[?tags.caf_tfstate=='{{ config.tfstates["platform"].platform_subscriptions.level | default('level1') }}' && tags.caf_environment=='{{ config.caf_terraform.launchpad.caf_environment }}'].{name:name}[0]" -o json | jq -r .name

- debug:
    msg: "{{ subscription_tfstate_file_name.stdout }}"

- name: "Download platform subscriptions tfstate details"
  register: platform_subscription_tfstate_exists
  shell: |
    az storage blob download \
      --name "{{ config.tfstates["platform"].platform_subscriptions.tfstate | default('platform_subscriptions.tfstate') }}" \
      --account-name "{{ subscription_tfstate_file_name.stdout }}" \
      --container-name "tfstate" \
      --auth-mode "login" \
      --file "{{ job_cache_base_path }}/{{ config.tfstates["platform"].platform_subscriptions.tfstate | default('platform_subscriptions.tfstate') }}"

- name: "Get platform_subscriptions details"
  when: platform_subscription_tfstate_exists.rc == 0
  shell: "cat {{ job_cache_base_path }}/{{ config.tfstates[\"platform\"].platform_subscriptions.tfstate | default('platform_subscriptions.tfstate') }}"
  register: platform_subscriptions

- name: "Get platform_subscriptions json data"
  when: platform_subscription_tfstate_exists.rc == 0
  set_fact:
    platform_sub_jsondata: "{{ platform_subscriptions.stdout | from_json }}"

- name: "Get subscriptions list"
  when: platform_subscription_tfstate_exists.rc == 0
  set_fact:
    platform_subscriptions_details: "{{ platform_sub_jsondata | json_query(path) }}"
  vars:
    path: 'outputs.objects.value.{{ config.tfstates["platform"].platform_subscriptions.lz_key_name }}.subscriptions'


# Get Platform keyvaults
- name: "Get tfstate keyvaults account name"
  register: launchpad_storage_account
  ignore_errors: yes
  shell: |
    az storage account list \
      --subscription {{ config.caf_terraform.launchpad.subscription_id }} \
      --query "[?tags.caf_tfstate=='{{ config.tfstates["platform"].launchpad.level | default('level0') }}' && tags.caf_environment=='{{ config.caf_terraform.launchpad.caf_environment }}'].{name:name}[0]" -o json | jq -r .name

- debug:
    msg: "{{launchpad_storage_account}}"

- name: "Get tfstate keyvaults details"
  register: credentials_tfstate_exists
  when: launchpad_storage_account.stderr == ""
  ignore_errors: yes
  shell: |
    az storage blob download \
      --name "{{ config.tfstates["platform"].launchpad_credentials.tfstate | default('launchpad_credentials.tfstate') }}" \
      --account-name "{{ launchpad_storage_account.stdout }}" \
      --container-name "{{ config.tfstates["platform"].launchpad.workspace | default('tfstate') }}" \
      --auth-mode "login" \
      --file "~/.terraform.cache/launchpad/{{ config.tfstates["platform"].launchpad_credentials.tfstate | default('launchpad_credentials.tfstate') }}"

- name: "Get launchpad_credentials details"
  when: credentials_tfstate_exists is not skipped
  shell: "cat ~/.terraform.cache/launchpad/{{ config.tfstates[\"platform\"].launchpad_credentials.tfstate | default('launchpad_credentials.tfstate') }}"
  register: launchpad_credentials

- name: "Get launchpad_credentials json data"
  when: credentials_tfstate_exists is not skipped
  set_fact:
    credjsondata: "{{ launchpad_credentials.stdout | from_json }}"

- name: "Set keyvaults variable"
  when: credentials_tfstate_exists is not skipped
  set_fact:
    keyvaults: "{{ credjsondata | json_query(path) }}"
  vars:
    path: 'outputs.objects.value.launchpad_credentials_rotation.keyvaults'
