- name: "[{{ level }}-{{ base_folder }}] Clean-up directory"
  file:
    path: "{{ destination_base }}/{{ config.configuration_folders.platform.destination_relative_path }}/{{ level }}/{{ base_folder }}"
    state: absent
  when: config.configuration_folders.platform.cleanup_destination | bool

- name: "[{{ level }}-{{ base_folder }}] Creates directory"
  file:
    path: "{{ destination_base }}/{{ config.configuration_folders.platform.destination_relative_path }}/{{ level }}/{{ base_folder }}"
    state: directory

- name: "[{{ level }}-{{ base_folder }}] - Set variables"
  set_fact:
    destination_path: "{{ destination_base }}/{{ config.configuration_folders.platform.destination_relative_path }}/{{ level }}/{{ base_folder }}"

- name: "[{{ level }}-{{ base_folder }}] - Load variables"
  include_vars:
    name: resources
    dir: "{{config_folder}}"
    depth: 1
    ignore_unknown_extensions: true
    files_matching: "identity.yaml|identity.caf.platform.yaml"


#
# resource_groups
#
- name: "[{{ level }}-{{ base_folder }}] - resources - resource_groups"
  when:
    - resources.subscriptions[subscription_key].resource_groups is defined
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ destination_path }}/{{ item | basename | regex_replace('.j2$', '') }}"
    force: yes
  with_fileglob:
    - "{{ resource_template_folder }}/resource_groups.tfvars.j2"

#
# recovery_vaults
#
- name: "[{{ level }}-{{ subscription_key }}] - resources - recovery_vaults"
  when:
    - resources.subscriptions[subscription_key].recovery_vaults is defined
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ destination_path }}/{{ item | basename | regex_replace('.j2$', '') }}"
    force: yes
  with_fileglob:
    - "{{ resource_template_folder }}/recovery_vaults.tfvars.j2"

#
# service_health_alerts
#
- name: "[{{ level }}-{{ base_folder }}] - resources - service_health_alerts"
  when:
    - resources.subscriptions[subscription_key].service_health_alerts is defined
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ destination_path }}/{{ item | basename | regex_replace('.j2$', '') }}"
    force: yes
  with_fileglob:
    - "{{ resource_template_folder }}/servicehealth.tfvars.j2"


- name: "[{{ level }}-{{ base_folder }}] generate configuration files."
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ destination_base }}/{{ config.configuration_folders.platform.destination_relative_path }}/{{ level }}/{{ base_folder }}/{{ item | basename | regex_replace('.j2$', '') }}"
    force: yes
  with_fileglob:
    - "{{ level }}/{{ base_folder }}/*.tfvars.j2"
    - "{{ level }}/{{ base_folder }}/*.md"

