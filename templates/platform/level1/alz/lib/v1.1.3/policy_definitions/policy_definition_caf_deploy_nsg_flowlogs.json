{
  "name": "CAF-Deploy-Nsg-FlowLogs",
  "type": "Microsoft.Authorization/policyDefinitions",
  "apiVersion": "2021-06-01",
  "scope": null,
  "properties": {
    "policyType": "Custom",
    "mode": "Indexed",
    "displayName": "CAF - Enable Nsg flowlogs and traffic analytics.",
    "parameters": {
      "effect": {
        "type": "String",
        "metadata": {
          "displayName": "Effect",
          "description": "Enable or disable the execution of the policy"
        },
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists"
      },
      "flowAnalyticsEnabled": {
        "type": "String",
        "metadata": {
          "displayName": "Enable Traffic Analytics",
          "description": "Enable Traffic Analytics"
        },
        "defaultValue": "true"
      },
      "interval": {
        "type": "String",
        "metadata": {
          "displayName": "Traffic Analytics processing interval mins (10/60)",
          "description": "Traffic Analytics processing interval mins (10/60)"
        },
        "defaultValue": "60"
      },
      "retention": {
        "type": "String",
        "metadata": {
          "displayName": "Retention days in storage account. If you want to retain data forever and do not want to apply any retention policy, set retention (days) to 0.",
          "description": "Retention days in storage account. If you want to retain data forever and do not want to apply any retention policy, set retention (days) to 0."
        },
        "defaultValue": "2"
      },
      "logAnalytics": {
        "type": "String",
        "metadata": {
          "displayName": "Resource ID of Log Analytics workspace",
          "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
          "strongType": "omsWorkspace"
        },
        "defaultValue": ""
      },
      "storageAccountResourceId": {
        "type": "String",
        "metadata": {
          "displayName": "Storage Account Resource Id",
          "description": "Storage Account Resource Id",
          "strongType": "Microsoft.Storage/storageAccounts"
        },
        "defaultValue": ""
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "Incremental",
              "parameters": {
                "flowAnalyticsEnabled": {
                    "value": "[bool(parameters('flowAnalyticsEnabled'))]"
                  },
                "interval": {
                  "value": "[int(parameters('interval'))]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "networkSecurityGroup": {
                  "value": "[field('id')]"
                },
                "retention": {
                  "value": "[int(parameters('retention'))]"
                },
                "storageAccountResourceId": {
                  "value": "[parameters('storageAccountResourceId')]"
                },
                "logAnalytics": {
                  "value": "[parameters('logAnalytics')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "location": "[parameters('location')]",
                "outputs": {},
                "parameters": {
                  "flowAnalyticsEnabled": {
                    "type": "bool"
                  },
                  "interval": {
                    "type": "int"
                  },
                  "location": {
                    "type": "String"
                  },
                  "networkSecurityGroup": {
                    "type": "String"
                  },
                  "retention": {
                    "type": "int"
                  },
                  "storageAccountResourceId": {
                    "type": "String"
                  },
                  "time": {
                    "defaultValue": "[utcNow()]",
                    "type": "String"
                  },
                  "logAnalytics": {
                    "type": "String"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2019-10-01",
                    "name": "[take(concat('NetworkWatcherRG', '.', variables('securityGroupName')), 64)]",
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "resources": [
                          {
                            "apiVersion": "2020-05-01",
                            "name": "[concat('NetworkWatcher_', toLower(parameters('location')))]",
                            "location": "[parameters('location')]",
                            "properties": {},
                            "resources": [
                              {
                                "apiVersion": "2019-11-01",
                                "dependsOn": [
                                  "[concat('NetworkWatcher_', toLower(parameters('location')))]"
                                ],
                                "name": "[concat(variables('securityGroupName'), '-Network-flowlog')]",
                                "location": "[parameters('location')]",
                                "properties": {
                                  "enabled": true,
                                  "flowAnalyticsConfiguration": {
                                    "networkWatcherFlowAnalyticsConfiguration": {
                                      "enabled": "[bool(parameters('flowAnalyticsEnabled'))]",
                                      "trafficAnalyticsInterval": "[parameters('interval')]",
                                      "workspaceRegion": "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').location, json('null')) ]",
                                      "workspaceResourceId": "[parameters('logAnalytics')]"
                                    }
                                  },
                                  "format": {
                                    "type": "JSON",
                                    "version": 2
                                  },
                                  "retentionPolicy": {
                                    "days": "[parameters('retention')]",
                                    "enabled": true
                                  },
                                  "storageId": "[parameters('storageAccountResourceId')]",
                                  "targetResourceId": "[parameters('networkSecurityGroup')]"
                                },
                                "type": "flowLogs"
                              }
                            ],
                            "type": "Microsoft.Network/networkWatchers"
                          }
                        ]
                      }
                    },
                    "resourceGroup": "NetworkWatcherRG",
                    "type": "Microsoft.Resources/deployments"
                  }
                ],
                "variables": {
                  "securityGroupName": "[split(parameters('networkSecurityGroup'), '/')[8]]"
                }
              }
            }
          },          
          "existenceCondition": {
            "allof": [
              {
                "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                "equals": "true"
              },
              {
                "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
                "equals": "[bool(parameters('flowAnalyticsEnabled'))]"
              },
              {
                "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.trafficAnalyticsInterval",
                "equals": "[parameters('interval')]"
              },
              {
                "field": "Microsoft.Network/networkWatchers/flowLogs/retentionPolicy.days",
                "equals": "[parameters('retention')]"
              }
            ]
          }, 
          "resourceGroupName": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), 'NetworkWatcherRG', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]",
          "name": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id'))), 'null/null', concat(split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8], '/', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10]))]",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
          ],
          "type": "Microsoft.Network/networkWatchers/flowLogs"
        },
        "effect": "[parameters('effect')]"
      }
    }
  }
}