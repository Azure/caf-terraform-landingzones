#
# Check if the launchpad and the credentials for service principal have been deployed.
#

- name: "[{{resources[tfstate].relative_destination_folder}}] Get tfstate account name"
  register: launchpad_storage_account
  shell: |
    az storage account list \
      --subscription {{ resources.caf_launchpad.subscription_id }} \
      --query "[?tags.caf_tfstate=='{{ tfstate_object.level }}' && tags.caf_environment=='{{ resources.caf_environment }}'].{name:name}[0]" -o json | jq -r .name

- debug:
    msg: "{{launchpad_storage_account}}"

- name: "[{{resources[tfstate].relative_destination_folder}}] Get launchpad tfstate details"
  register: launchpad_tfstate_exists
  ignore_errors: true
  shell: |
    az storage blob download \
      --name "{{ resources.tfstates.platform.launchpad.tfstate }}" \
      --account-name "{{ launchpad_storage_account.stdout | default('') }}" \
      --container-name "{{ resources.tfstates.platform.launchpad.workspace | default('tfstate') }}" \
      --auth-mode "login" \
      --file "{{ job_cache_base_path }}/launchpad/{{ resources.tfstates.platform.launchpad.tfstate }}"

- debug:
    msg: "{{launchpad_tfstate_exists}}"

- name: "[{{resources[tfstate].relative_destination_folder}}] Get subscription_creation_landingzones details"
  when:
    - launchpad_tfstate_exists.rc == 0
    - resources.enable_azure_subscription_vending_machine
  shell: "cat {{ job_cache_base_path }}/launchpad/{{ resources.tfstates.platform.launchpad.tfstate }}"
  register: launchpad_tfstate

- name: "[{{resources[tfstate].relative_destination_folder}}] Get launchpad json data"
  when:
    - launchpad_tfstate_exists.rc == 0
    - resources.enable_azure_subscription_vending_machine
  set_fact:
    scljsondata: "{{ launchpad_tfstate.stdout | from_json }}"

- name: "[{{resources[tfstate].relative_destination_folder}}] set launchpad_azuread_groups"
  when:
    - launchpad_tfstate_exists.rc == 0
    - resources.enable_azure_subscription_vending_machine
  set_fact:
    launchpad_azuread_groups: "{{ scljsondata | json_query(path) }}"
  vars:
    path: 'outputs.objects.value.launchpad.azuread_groups'

- name: "[{{resources[tfstate].relative_destination_folder}}] Get credentials tfstate details for {{ resources.tfstates.platform.launchpad_credentials.tfstate }} from {{ launchpad_storage_account.stdout }}/{{ resources.tfstates.platform.launchpad.workspace | default('tfstate') }}"
  register: credentials_tfstate_exists
  ignore_errors: true
  shell: |
    az storage blob download \
      --name "{{ resources.tfstates.platform.launchpad_credentials.tfstate }}" \
      --account-name "{{ launchpad_storage_account.stdout }}" \
      --container-name "{{ resources.tfstates.platform.launchpad.workspace | default('tfstate') }}" \
      --auth-mode "login" \
      --file "{{ job_cache_base_path }}/launchpad/{{ resources.tfstates.platform.launchpad_credentials.tfstate }}" 

- name: "[{{resources[tfstate].relative_destination_folder}}] Get launchpad_credentials details"
  when:
    - launchpad_tfstate_exists.rc == 0
    - credentials_tfstate_exists.rc == 0
  shell: "cat {{ job_cache_base_path }}/launchpad/{{ resources.tfstates.platform.launchpad_credentials.tfstate }}"
  register: launchpad_credentials

- name: "Keyvaults"
  debug:
    msg: 
    - "{{credentials_tfstate_exists}}"
    - "{{ resources.tfstates.platform.launchpad_credentials.tfstate }}"
    - "{{launchpad_credentials}}"
    verbosity: 2
  when:
    - launchpad_tfstate_exists.rc == 0
    - credentials_tfstate_exists.rc == 0

- name: "[{{resources[tfstate].relative_destination_folder}}] Get launchpad_credentials json data"
  when:
    - launchpad_tfstate_exists.rc == 0
    - credentials_tfstate_exists.rc == 0
  set_fact:
    credjsondata: "{{ launchpad_credentials.stdout | from_json }}"

- name: "[{{resources[tfstate].relative_destination_folder}}] set keyvaults"
  when:
    - launchpad_tfstate_exists.rc == 0
    - credentials_tfstate_exists.rc == 0
  set_fact:
    keyvaults: "{{ credjsondata | json_query(path) }}"
  vars:
    path: 'outputs.objects.value.launchpad_credentials.keyvaults'

- name: "[{{resources[tfstate].relative_destination_folder}}] cleanup"
  when:
    - launchpad_tfstate_exists.rc == 0
    - credentials_tfstate_exists.rc == 0
  file:
    path: "{{ job_cache_base_path }}/launchpad/{{ resources.tfstates.platform.launchpad_credentials.tfstate }}"
    state: absent

- name: "[{{resources[tfstate].relative_destination_folder}}] cleanup"
  when:
    - launchpad_tfstate_exists.rc == 0
    - credentials_tfstate_exists.rc == 0
  file:
    path: "{{ job_cache_base_path }}/launchpad/{{ resources.tfstates.platform.launchpad.tfstate }}"
    state: absent
